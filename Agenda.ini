[Rainmeter]
Update=1000
AccurateText=1
DynamicWindowSize=1
SectionVariables=1
OnRefreshAction=[!UpdateMeasure "MeasureAutoGen"]
ContextTitle="Refresh Calendar"
ContextAction=[!CommandMeasure "MeasureGenerateCalendar" "Run"]
ContextTitle2="Force Update Now"
ContextAction2=[!CommandMeasure "MeasureGenerateCalendar" "Run"]

[Metadata]
Name=Outlook Calendar Agenda (Dynamic)
Author=You
Information=Dynamic agenda view with separate day headers
Version=3.0.0
License=MIT

[Variables]
; Display settings
Title=Agenda
FontName=Segoe UI
FontSize=9
TitleSize=11
FontColor=255,255,255,255
TitleColor=0,204,255,255
DateColor=0,204,255,255
BackgroundColor=30,30,30,180
Width=200
Padding=8

; Data settings
DaysToShow=5
MaxItems=30
TimeFormat=h:mm tt
DateFormat=ddd MMM d
; Refresh settings
RefreshMinutes=1
; Tooltip text initialized
LastUpdated=Last updated: 6:02 PM
; Prevent double-triggering on refresh
LastRunMinute=02

; Powershell
Pwsh=powershell.exe
; One-time auto-generate guard
AutoGen=0

; ======================= Measures =======================
; Minute-aligned trigger: fires at second 1 when minute % RefreshMinutes == 0
[MeasureSecond]
Measure=Time
Format=%S
UpdateDivider=1

[MeasureMinute]
Measure=Time
Format=%M
UpdateDivider=1

[MeasureTick]
Measure=Calc
Formula=1
IfCondition=(( [MeasureSecond] = 1 ) && ( ([MeasureMinute] % #RefreshMinutes#) = 0 ) && ( [MeasureMinute] <> #LastRunMinute# ))
IfTrueAction=[!WriteKeyValue Variables LastRunMinute "[MeasureMinute]"][!CommandMeasure "MeasureGenerateCalendar" "Run"]
DynamicVariables=1

[MeasureAutoGen]
Measure=String
String=#AutoGen#
IfMatch=^1$
IfMatchAction=[!WriteKeyValue Variables AutoGen 0][!CommandMeasure "MeasureGenerateCalendar" "Run"]
DynamicVariables=1

[MeasureGenerateCalendar]
Measure=Plugin
Plugin=RunCommand
Program=#Pwsh#
Parameter=-NoProfile -ExecutionPolicy Bypass -File "#@#Agenda.ps1" -Days #DaysToShow# -Max #MaxItems# -TimeFormat "#TimeFormat#" -DateFormat "#DateFormat#" -OutInc "#@#Agenda.inc" -OutJson "#@#agenda.json"
OutputType=ANSI
FinishAction=[!Refresh]
UpdateDivider=-1
Timeout=20000

[MeasureOpenOutlook]
Measure=Plugin
Plugin=RunCommand
Program=#Pwsh#
Parameter=-NoProfile -ExecutionPolicy Bypass -Command "$ol = Get-Process -Name 'OUTLOOK' -ErrorAction SilentlyContinue; if ($ol) { Add-Type -AssemblyName System.Windows.Forms; $ol | ForEach-Object { if ($_.MainWindowHandle -ne [System.IntPtr]::Zero) { [System.Windows.Forms.SendKeys]::SendWait('%{TAB}'); Start-Sleep -Milliseconds 100; Add-Type -name Win32 -namespace Win32Functions -memberDefinition '[DllImport(\"user32.dll\")] public static extern bool ShowWindow(IntPtr hWnd, int nCmdShow); [DllImport(\"user32.dll\")] public static extern bool SetForegroundWindow(IntPtr hWnd);'; [Win32Functions.Win32]::ShowWindow($_.MainWindowHandle, 9); [Win32Functions.Win32]::SetForegroundWindow($_.MainWindowHandle) } }; try { $app = New-Object -ComObject Outlook.Application; $app.ActiveExplorer().CurrentFolder = $app.Session.GetDefaultFolder(9) } catch {} } else { Start-Process 'OUTLOOK.EXE' -ArgumentList '/select outlook:calendar' }"
OutputType=ANSI
UpdateDivider=-1

; ======================= Meters =======================
[MeterBackground]
Meter=Shape
X=10
Y=10
DynamicVariables=1
UpdateDivider=1
Shape=Rectangle 0,0,#Width#,(([MeterContentEnd:YH] > 60) ? ([MeterContentEnd:YH]+#Padding#) : 100),8 | Fill Color #BackgroundColor# | StrokeWidth 1 | Stroke Color 60,60,60,220
ToolTipText=#LastUpdated#

[MeterTitle]
Meter=String
Text=#Title#
X=(#Padding#+10)
Y=(#Padding#+10)
FontFace=#FontName#
FontSize=#TitleSize#
FontColor=255,255,255,255
FontWeight=700
AntiAlias=1
StringAlign=Left
LeftMouseUpAction=[!CommandMeasure "MeasureOpenOutlook" "Run"]

[MeterDivider]
Meter=Shape
X=(#Padding#+10)
Y=(#Padding#+[MeterTitle:H]+2+10)
DynamicVariables=1
Shape=Line 0,0,(#Width#-2*#Padding#),0 | StrokeWidth 1 | Stroke Color 90,90,90,200

; Include generated content (dynamic meters)
@Include1=#@#Agenda.inc


